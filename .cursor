+ Always look for existing code to iterate on instead of creating new code.
+ Do not drastically change the patterns before trying to iterate on existing patterns.
+ Avoid duplication of code whenever possible, which means checking for other areas of the codebase that might already have similar code and functionality
+ Write code that takes into account the different environments: dev, test, and prod
+ When fixing an issue or bug, do not introduce a new pattern or technology without first exhausting all options for the existing implementation. And if you finally do this, make sure to remove the old implementation afterwards so we don't have duplicate logic.
+ Focus on the areas of code relevant to the task
+ Do not touch code that is unrelated to the task
+ Avoid making major changes to the patterns and architecture of how a feature works, after it has been shown to work well, unless explicitly instructed
+ Always think about what other methods and areas of code might be affected by code changes

+ Keep the codebase very clean and organized
+ Avoid writing scripts in files if possible, especially if the script is likely only to be run once
+ Mocking data is only needed for tests, never mock data for dev or prod
+ Never add stubbing or fake data patterns to code that affects the dev or prod environments
+ Never overwrite my .env file without first asking and confirming
+ Do not use constantly "const" in a JS files, to define properties to work with in the  *.ts files. "const" are only non-changeable parameters witch is declared at the top of the file, you may use "var" instead, it make it easeir to grasp witch variable name are changeable and which are static.
